{"ast":null,"code":"var _jsxFileName = \"/Users/meghana/Desktop/chatapp 2/frontend/src/Components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000', {\n  transports: ['websocket']\n});\nconst Chat = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on('message', handleMessage);\n    return () => {\n      socket.off('message', handleMessage);\n    };\n  }, [username]);\n  const handleMessage = data => {\n    setMessages(prevMessages => [...prevMessages, data]);\n  };\n  const sendMessage = () => {\n    if (message) {\n      socket.emit('message', {\n        recipient: username,\n        message\n      });\n      setMessage('');\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'You',\n        message: message\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `${msg.sender}: ${msg.message}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"b7/sKmLYvn3ZaeB5QsCX1s7RTHI=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:4000', {\n//     transports: ['websocket'],\n// });\n\n// const Chat = () => {\n//     const { username } = useParams();\n//     const [message, setMessage] = useState('');\n//     const [messages, setMessages] = useState([]);\n\n//     useEffect(() => {\n//         socket.on('message', handleMessage);\n\n//         return () => {\n//             socket.off('message', handleMessage);\n//         };\n//     }, []);\n\n//     const handleMessage = (data) => {\n//         setMessages((prevMessages) => [...prevMessages, data]);\n//     };\n\n//     const sendMessage = () => {\n//         if (message) {\n//             socket.emit('message', { recipient: username, message });\n//             setMessages((prevMessages) => [\n//                 ...prevMessages,\n//                 { sender: 'You', message: message },\n//             ]);\n//             setMessage('');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Chat with {username}</h2>\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Enter your message\"\n//                     value={message}\n//                     onChange={(e) => setMessage(e.target.value)}\n//                 />\n//                 <button onClick={sendMessage}>Send</button>\n//             </div>\n//             <h3>Chat Messages:</h3>\n//             <ul>\n//                 {messages.map((msg, index) => (\n//                     <li key={index}>\n//                         <strong>{msg.sender}:</strong> {msg.message}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","socket","transports","Chat","_s","username","message","setMessage","messages","setMessages","on","handleMessage","off","data","prevMessages","sendMessage","emit","recipient","sender","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/meghana/Desktop/chatapp 2/frontend/src/Components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:4000', {\r\n    transports: ['websocket'],\r\n});\r\n\r\nconst Chat = () => {\r\n    const { username } = useParams();\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.on('message', handleMessage);\r\n\r\n        return () => {\r\n            socket.off('message', handleMessage);\r\n        };\r\n    }, [username]);\r\n\r\n    const handleMessage = (data) => {\r\n        setMessages((prevMessages) => [...prevMessages, data]);\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (message) {\r\n            socket.emit('message', { recipient: username, message });\r\n            setMessage('');\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                { sender: 'You', message: message },\r\n            ]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat with {username}</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your message\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n            <ul>\r\n                {messages.map((msg, index) => (\r\n                    <li key={index}>{`${msg.sender}: ${msg.message}`}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import io from 'socket.io-client';\r\n\r\n// const socket = io('http://localhost:4000', {\r\n//     transports: ['websocket'],\r\n// });\r\n\r\n// const Chat = () => {\r\n//     const { username } = useParams();\r\n//     const [message, setMessage] = useState('');\r\n//     const [messages, setMessages] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         socket.on('message', handleMessage);\r\n\r\n//         return () => {\r\n//             socket.off('message', handleMessage);\r\n//         };\r\n//     }, []);\r\n\r\n//     const handleMessage = (data) => {\r\n//         setMessages((prevMessages) => [...prevMessages, data]);\r\n//     };\r\n\r\n//     const sendMessage = () => {\r\n//         if (message) {\r\n//             socket.emit('message', { recipient: username, message });\r\n//             setMessages((prevMessages) => [\r\n//                 ...prevMessages,\r\n//                 { sender: 'You', message: message },\r\n//             ]);\r\n//             setMessage('');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Chat with {username}</h2>\r\n//             <div>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Enter your message\"\r\n//                     value={message}\r\n//                     onChange={(e) => setMessage(e.target.value)}\r\n//                 />\r\n//                 <button onClick={sendMessage}>Send</button>\r\n//             </div>\r\n//             <h3>Chat Messages:</h3>\r\n//             <ul>\r\n//                 {messages.map((msg, index) => (\r\n//                     <li key={index}>\r\n//                         <strong>{msg.sender}:</strong> {msg.message}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}