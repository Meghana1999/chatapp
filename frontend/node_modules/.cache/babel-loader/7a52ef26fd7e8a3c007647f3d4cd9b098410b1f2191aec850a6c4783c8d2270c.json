{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vpola\\\\Downloads\\\\ProJHKMag\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\n// // App.js\n// import React, { useState, useEffect } from 'react';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:4000', {\n//   transports: ['websocket'], // Force WebSocket transport only\n// });\n\n// function App() {\n//   const [username, setUsername] = useState('');\n//   const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n//   const [activeUsers, setActiveUsers] = useState([]);\n//   const [recipient, setRecipient] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n\n//   useEffect(() => {\n//     const handleActiveUsers = (users) => {\n//       setActiveUsers(users.filter((user) => user !== username));\n//     };\n\n//     const handleMessage = (data) => {\n//       setMessages((prevMessages) => [...prevMessages, data]);\n//     };\n\n//     socket.on('activeUsers', handleActiveUsers);\n//     socket.on('message', handleMessage);\n\n//     return () => {\n//       socket.off('activeUsers', handleActiveUsers);\n//       socket.off('message', handleMessage);\n//     };\n//   }, [username]);\n\n//   const handleUsernameSubmit = () => {\n//     if (username.trim() !== '') {\n//       socket.emit('join', username);\n//       setUsernameSubmitted(true);\n//     }\n//   };\n\n//   const sendMessage = () => {\n//     if (recipient && message) {\n//       socket.emit('message', { recipient, message });\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { sender: 'You', message: message },\n//       ]);\n//       setMessage('');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!usernameSubmitted ? (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//           <button onClick={handleUsernameSubmit}>Set Username</button>\n//         </div>\n//       ) : (\n//         <div>\n//           <h2>Welcome, {username}!</h2>\n//           <h3>Active Users:</h3>\n//           <ul>\n//             {activeUsers.map((user) => (\n//               <li key={user}>{user}</li>\n//             ))}\n//           </ul>\n//           <h3>Select Recipient:</h3>\n//           <select\n//             value={recipient}\n//             onChange={(e) => setRecipient(e.target.value)}\n//           >\n//             <option value=\"\">Select User</option>\n//             {activeUsers.map((user) => (\n//               <option key={user} value={user}>\n//                 {user}\n//               </option>\n//             ))}\n//           </select>\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your message\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//             />\n//             <button onClick={sendMessage}>Send</button>\n//           </div>\n//           <h3>Chat Messages:</h3>\n//           <ul>\n//             {messages.map((msg, index) => (\n//               <li key={index}>\n//                 <strong>{msg.sender}:</strong> {msg.message}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000', {\n  transports: ['websocket']\n});\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [peer, setPeer] = useState(null);\n  const videoRef = useRef();\n  useEffect(() => {\n    const handleActiveUsers = users => {\n      setActiveUsers(users.filter(user => user !== username));\n    };\n    const handleMessage = data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    };\n    socket.on('activeUsers', handleActiveUsers);\n    socket.on('message', handleMessage);\n    return () => {\n      socket.off('activeUsers', handleActiveUsers);\n      socket.off('message', handleMessage);\n    };\n  }, [username]);\n  useEffect(() => {\n    if (peer) {\n      peer.on('stream', stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n      peer.on('signal', data => {\n        socket.emit('signal', {\n          recipient,\n          signal: data\n        });\n      });\n    }\n  }, [peer]);\n  const handleUsernameSubmit = () => {\n    if (username.trim() !== '') {\n      socket.emit('join', username);\n      setUsernameSubmitted(true);\n    }\n  };\n  const sendMessage = () => {\n    if (recipient && message) {\n      socket.emit('message', {\n        recipient,\n        message\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'You',\n        message: message\n      }]);\n      setMessage('');\n    }\n  };\n  const startVideoCall = recipient => {\n    if (!peer) {\n      const newPeer = new SimplePeer({\n        initiator: true,\n        trickle: false\n      });\n      newPeer.on('signal', data => {\n        socket.emit('signal', {\n          recipient,\n          signal: data\n        });\n      });\n      newPeer.on('stream', stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n      setPeer(newPeer);\n      setRecipient(recipient);\n    }\n  };\n  const acceptVideoCall = sender => {\n    if (!peer) {\n      const newPeer = new SimplePeer({\n        trickle: false\n      });\n      newPeer.on('signal', data => {\n        socket.emit('signal', {\n          recipient: sender,\n          signal: data\n        });\n      });\n      newPeer.on('stream', stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n      setPeer(newPeer);\n      setRecipient(sender);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!usernameSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUsernameSubmit,\n        children: \"Set Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Active Users:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startVideoCall(user),\n            children: \"Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, user, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Recipient:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: recipient,\n        onChange: e => setRecipient(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user,\n          children: user\n        }, user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tRCVrvZlHEaH3123H1aBUyI1MRQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","SimplePeer","jsxDEV","_jsxDEV","socket","transports","App","_s","username","setUsername","usernameSubmitted","setUsernameSubmitted","activeUsers","setActiveUsers","recipient","setRecipient","message","setMessage","messages","setMessages","peer","setPeer","videoRef","handleActiveUsers","users","filter","user","handleMessage","data","prevMessages","on","off","stream","current","srcObject","emit","signal","handleUsernameSubmit","trim","sendMessage","sender","startVideoCall","newPeer","initiator","trickle","acceptVideoCall","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["C:/Users/vpola/Downloads/ProJHKMag/client/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\n// // App.js\n// import React, { useState, useEffect } from 'react';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:4000', {\n//   transports: ['websocket'], // Force WebSocket transport only\n// });\n\n// function App() {\n//   const [username, setUsername] = useState('');\n//   const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n//   const [activeUsers, setActiveUsers] = useState([]);\n//   const [recipient, setRecipient] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n\n//   useEffect(() => {\n//     const handleActiveUsers = (users) => {\n//       setActiveUsers(users.filter((user) => user !== username));\n//     };\n\n//     const handleMessage = (data) => {\n//       setMessages((prevMessages) => [...prevMessages, data]);\n//     };\n\n//     socket.on('activeUsers', handleActiveUsers);\n//     socket.on('message', handleMessage);\n\n//     return () => {\n//       socket.off('activeUsers', handleActiveUsers);\n//       socket.off('message', handleMessage);\n//     };\n//   }, [username]);\n\n//   const handleUsernameSubmit = () => {\n//     if (username.trim() !== '') {\n//       socket.emit('join', username);\n//       setUsernameSubmitted(true);\n//     }\n//   };\n\n//   const sendMessage = () => {\n//     if (recipient && message) {\n//       socket.emit('message', { recipient, message });\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { sender: 'You', message: message },\n//       ]);\n//       setMessage('');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!usernameSubmitted ? (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//           <button onClick={handleUsernameSubmit}>Set Username</button>\n//         </div>\n//       ) : (\n//         <div>\n//           <h2>Welcome, {username}!</h2>\n//           <h3>Active Users:</h3>\n//           <ul>\n//             {activeUsers.map((user) => (\n//               <li key={user}>{user}</li>\n//             ))}\n//           </ul>\n//           <h3>Select Recipient:</h3>\n//           <select\n//             value={recipient}\n//             onChange={(e) => setRecipient(e.target.value)}\n//           >\n//             <option value=\"\">Select User</option>\n//             {activeUsers.map((user) => (\n//               <option key={user} value={user}>\n//                 {user}\n//               </option>\n//             ))}\n//           </select>\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your message\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//             />\n//             <button onClick={sendMessage}>Send</button>\n//           </div>\n//           <h3>Chat Messages:</h3>\n//           <ul>\n//             {messages.map((msg, index) => (\n//               <li key={index}>\n//                 <strong>{msg.sender}:</strong> {msg.message}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\n\nconst socket = io('http://localhost:4000', {\n  transports: ['websocket'],\n});\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [recipient, setRecipient] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [peer, setPeer] = useState(null);\n  const videoRef = useRef();\n\n  useEffect(() => {\n    const handleActiveUsers = (users) => {\n      setActiveUsers(users.filter((user) => user !== username));\n    };\n\n    const handleMessage = (data) => {\n      setMessages((prevMessages) => [...prevMessages, data]);\n    };\n\n    socket.on('activeUsers', handleActiveUsers);\n    socket.on('message', handleMessage);\n\n    return () => {\n      socket.off('activeUsers', handleActiveUsers);\n      socket.off('message', handleMessage);\n    };\n  }, [username]);\n\n  useEffect(() => {\n    if (peer) {\n      peer.on('stream', (stream) => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n\n      peer.on('signal', (data) => {\n        socket.emit('signal', { recipient, signal: data });\n      });\n    }\n  }, [peer]);\n\n  const handleUsernameSubmit = () => {\n    if (username.trim() !== '') {\n      socket.emit('join', username);\n      setUsernameSubmitted(true);\n    }\n  };\n\n  const sendMessage = () => {\n    if (recipient && message) {\n      socket.emit('message', { recipient, message });\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: 'You', message: message },\n      ]);\n      setMessage('');\n    }\n  };\n\n  const startVideoCall = (recipient) => {\n    if (!peer) {\n      const newPeer = new SimplePeer({ initiator: true, trickle: false });\n\n      newPeer.on('signal', (data) => {\n        socket.emit('signal', { recipient, signal: data });\n      });\n\n      newPeer.on('stream', (stream) => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n\n      setPeer(newPeer);\n      setRecipient(recipient);\n    }\n  };\n\n  const acceptVideoCall = (sender) => {\n    if (!peer) {\n      const newPeer = new SimplePeer({ trickle: false });\n\n      newPeer.on('signal', (data) => {\n        socket.emit('signal', { recipient: sender, signal: data });\n      });\n\n      newPeer.on('stream', (stream) => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n\n      setPeer(newPeer);\n      setRecipient(sender);\n    }\n  };\n\n  return (\n    <div>\n      {!usernameSubmitted ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <button onClick={handleUsernameSubmit}>Set Username</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Welcome, {username}!</h2>\n          <h3>Active Users:</h3>\n          <ul>\n            {activeUsers.map((user) => (\n              <li key={user}>\n                {user}\n                <button onClick={() => startVideoCall(user)}>Call</button>\n              </li>\n            ))}\n          </ul>\n          <h3>Select Recipient:</h3>\n          <select\n            value={recipient}\n            onChange={(e) => setRecipient(e.target.value)}\n          >\n            <option value=\"\">Select User</option>\n            {activeUsers.map((user) => (\n              <option key={user} value={user}>\n                {user}\n              </option>\n            ))}\n          </select>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n            <button onClick={sendMessage}>Send</button>\n          </div>\n          <h3>Chat Messages:</h3>\n          <ul>\n            {messages.map((msg, index) => (\n              <li key={index}>\n                <strong>{msg.sender}:</strong> {msg.message}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <video ref={videoRef} autoPlay playsInline />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,EAAE;EACzCK,UAAU,EAAE,CAAC,WAAW;AAC1B,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMyB,QAAQ,GAAGvB,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACd,MAAMyB,iBAAiB,GAAIC,KAAK,IAAK;MACnCX,cAAc,CAACW,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKlB,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAED,MAAMmB,aAAa,GAAIC,IAAI,IAAK;MAC9BT,WAAW,CAAEU,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,IAAI,CAAC,CAAC;IACxD,CAAC;IAEDxB,MAAM,CAAC0B,EAAE,CAAC,aAAa,EAAEP,iBAAiB,CAAC;IAC3CnB,MAAM,CAAC0B,EAAE,CAAC,SAAS,EAAEH,aAAa,CAAC;IAEnC,OAAO,MAAM;MACXvB,MAAM,CAAC2B,GAAG,CAAC,aAAa,EAAER,iBAAiB,CAAC;MAC5CnB,MAAM,CAAC2B,GAAG,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACtC,CAAC;EACH,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAEdV,SAAS,CAAC,MAAM;IACd,IAAIsB,IAAI,EAAE;MACRA,IAAI,CAACU,EAAE,CAAC,QAAQ,EAAGE,MAAM,IAAK;QAC5B,IAAIV,QAAQ,CAACW,OAAO,EAAE;UACpBX,QAAQ,CAACW,OAAO,CAACC,SAAS,GAAGF,MAAM;QACrC;MACF,CAAC,CAAC;MAEFZ,IAAI,CAACU,EAAE,CAAC,QAAQ,EAAGF,IAAI,IAAK;QAC1BxB,MAAM,CAAC+B,IAAI,CAAC,QAAQ,EAAE;UAAErB,SAAS;UAAEsB,MAAM,EAAER;QAAK,CAAC,CAAC;MACpD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,MAAMiB,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI7B,QAAQ,CAAC8B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BlC,MAAM,CAAC+B,IAAI,CAAC,MAAM,EAAE3B,QAAQ,CAAC;MAC7BG,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAM4B,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIzB,SAAS,IAAIE,OAAO,EAAE;MACxBZ,MAAM,CAAC+B,IAAI,CAAC,SAAS,EAAE;QAAErB,SAAS;QAAEE;MAAQ,CAAC,CAAC;MAC9CG,WAAW,CAAEU,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAEW,MAAM,EAAE,KAAK;QAAExB,OAAO,EAAEA;MAAQ,CAAC,CACpC,CAAC;MACFC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAMwB,cAAc,GAAI3B,SAAS,IAAK;IACpC,IAAI,CAACM,IAAI,EAAE;MACT,MAAMsB,OAAO,GAAG,IAAIzC,UAAU,CAAC;QAAE0C,SAAS,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;MAEnEF,OAAO,CAACZ,EAAE,CAAC,QAAQ,EAAGF,IAAI,IAAK;QAC7BxB,MAAM,CAAC+B,IAAI,CAAC,QAAQ,EAAE;UAAErB,SAAS;UAAEsB,MAAM,EAAER;QAAK,CAAC,CAAC;MACpD,CAAC,CAAC;MAEFc,OAAO,CAACZ,EAAE,CAAC,QAAQ,EAAGE,MAAM,IAAK;QAC/B,IAAIV,QAAQ,CAACW,OAAO,EAAE;UACpBX,QAAQ,CAACW,OAAO,CAACC,SAAS,GAAGF,MAAM;QACrC;MACF,CAAC,CAAC;MAEFX,OAAO,CAACqB,OAAO,CAAC;MAChB3B,YAAY,CAACD,SAAS,CAAC;IACzB;EACF,CAAC;EAED,MAAM+B,eAAe,GAAIL,MAAM,IAAK;IAClC,IAAI,CAACpB,IAAI,EAAE;MACT,MAAMsB,OAAO,GAAG,IAAIzC,UAAU,CAAC;QAAE2C,OAAO,EAAE;MAAM,CAAC,CAAC;MAElDF,OAAO,CAACZ,EAAE,CAAC,QAAQ,EAAGF,IAAI,IAAK;QAC7BxB,MAAM,CAAC+B,IAAI,CAAC,QAAQ,EAAE;UAAErB,SAAS,EAAE0B,MAAM;UAAEJ,MAAM,EAAER;QAAK,CAAC,CAAC;MAC5D,CAAC,CAAC;MAEFc,OAAO,CAACZ,EAAE,CAAC,QAAQ,EAAGE,MAAM,IAAK;QAC/B,IAAIV,QAAQ,CAACW,OAAO,EAAE;UACpBX,QAAQ,CAACW,OAAO,CAACC,SAAS,GAAGF,MAAM;QACrC;MACF,CAAC,CAAC;MAEFX,OAAO,CAACqB,OAAO,CAAC;MAChB3B,YAAY,CAACyB,MAAM,CAAC;IACtB;EACF,CAAC;EAED,oBACErC,OAAA;IAAA2C,QAAA,GACG,CAACpC,iBAAiB,gBACjBP,OAAA;MAAA2C,QAAA,gBACE3C,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,qBAAqB;QACjCC,KAAK,EAAEzC,QAAS;QAChB0C,QAAQ,EAAGC,CAAC,IAAK1C,WAAW,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFrD,OAAA;QAAQsD,OAAO,EAAEpB,oBAAqB;QAAAS,QAAA,EAAC;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,gBAENrD,OAAA;MAAA2C,QAAA,gBACE3C,OAAA;QAAA2C,QAAA,GAAI,WAAS,EAACtC,QAAQ,EAAC,GAAC;MAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BrD,OAAA;QAAA2C,QAAA,EAAI;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBrD,OAAA;QAAA2C,QAAA,EACGlC,WAAW,CAAC8C,GAAG,CAAEhC,IAAI,iBACpBvB,OAAA;UAAA2C,QAAA,GACGpB,IAAI,eACLvB,OAAA;YAAQsD,OAAO,EAAEA,CAAA,KAAMhB,cAAc,CAACf,IAAI,CAAE;YAAAoB,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAFnD9B,IAAI;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGT,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLrD,OAAA;QAAA2C,QAAA,EAAI;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BrD,OAAA;QACE8C,KAAK,EAAEnC,SAAU;QACjBoC,QAAQ,EAAGC,CAAC,IAAKpC,YAAY,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAH,QAAA,gBAE9C3C,OAAA;UAAQ8C,KAAK,EAAC,EAAE;UAAAH,QAAA,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACpC5C,WAAW,CAAC8C,GAAG,CAAEhC,IAAI,iBACpBvB,OAAA;UAAmB8C,KAAK,EAAEvB,IAAK;UAAAoB,QAAA,EAC5BpB;QAAI,GADMA,IAAI;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTrD,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAEjC,OAAQ;UACfkC,QAAQ,EAAGC,CAAC,IAAKlC,UAAU,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACFrD,OAAA;UAAQsD,OAAO,EAAElB,WAAY;UAAAO,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACNrD,OAAA;QAAA2C,QAAA,EAAI;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBrD,OAAA;QAAA2C,QAAA,EACG5B,QAAQ,CAACwC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBzD,OAAA;UAAA2C,QAAA,gBACE3C,OAAA;YAAA2C,QAAA,GAASa,GAAG,CAACnB,MAAM,EAAC,GAAC;UAAA;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,GAAG,CAAC3C,OAAO;QAAA,GADpC4C,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,eACDrD,OAAA;MAAO0D,GAAG,EAAEvC,QAAS;MAACwC,QAAQ;MAACC,WAAW;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACjD,EAAA,CA5JQD,GAAG;AAAA0D,EAAA,GAAH1D,GAAG;AA8JZ,eAAeA,GAAG;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}