{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vpola\\\\Downloads\\\\ProJHKMag\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Replace with your server URL\n\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [username, setUsername] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [privateMessage, setPrivateMessage] = useState(false);\n  const [users, setUsers] = useState({});\n  const [joined, setJoined] = useState(false);\n  useEffect(() => {\n    socket.on('chatMessage', (sender, message) => {\n      setMessages(prevMessages => [...prevMessages, `${sender}: ${message}`]);\n    });\n    socket.on('userList', userList => {\n      setUsers(userList);\n    });\n  }, []);\n  const handleNewUser = () => {\n    socket.emit('newUser', username);\n    setJoined(true);\n  };\n  const sendMessage = () => {\n    if (privateMessage) {\n      socket.emit('privateMessage', {\n        recipient,\n        message: input\n      });\n    } else {\n      socket.emit('chatMessage', input);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-time Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewUser,\n        children: \"Join Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: recipient,\n        onChange: e => setRecipient(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), Object.keys(users).map(userId => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: users[userId]\n        }, userId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"oJ6qHzSLt0KBon/gFl3OMG7RO10=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","input","setInput","username","setUsername","recipient","setRecipient","privateMessage","setPrivateMessage","users","setUsers","joined","setJoined","on","sender","message","prevMessages","userList","handleNewUser","emit","sendMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","Object","keys","map","userId","index","_c","$RefreshReg$"],"sources":["C:/Users/vpola/Downloads/ProJHKMag/client/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:5000'); // Replace with your server URL\n\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n    const [username, setUsername] = useState('');\n    const [recipient, setRecipient] = useState('');\n    const [privateMessage, setPrivateMessage] = useState(false);\n    const [users, setUsers] = useState({});\n    const [joined, setJoined] = useState(false);\n\n    useEffect(() => {\n        socket.on('chatMessage', (sender, message) => {\n            setMessages(prevMessages => [...prevMessages, `${sender}: ${message}`]);\n        });\n        socket.on('userList', (userList) => {\n            setUsers(userList);\n        });\n    }, []);\n\n    const handleNewUser = () => {\n        socket.emit('newUser', username);\n        setJoined(true);\n    };\n\n    const sendMessage = () => {\n        if (privateMessage) {\n            socket.emit('privateMessage', { recipient, message: input });\n        } else {\n            socket.emit('chatMessage', input);\n        }\n        setInput('');\n    };\n\n    return (\n        <div>\n            <h1>Real-time Chat Application</h1>\n            {!joined ? (\n                <div>\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n                    <button onClick={handleNewUser}>Join Chat</button>\n                </div>\n            ) : (\n                <div>\n                    <select value={recipient} onChange={(e) => setRecipient(e.target.value)}>\n                        <option value=\"\">Select recipient</option>\n                        {Object.keys(users).map((userId) => (\n                            <option key={userId}>{users[userId]}</option>\n                        ))}\n                    </select>\n                    <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} />\n                    <button onClick={sendMessage}>Send</button>\n                </div>\n            )}\n            <div>\n                <ul>\n                    {messages.map((message, index) => (\n                        <li key={index}>{message}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}