{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:4000', {\n//     transports: ['websocket'],\n// });\n\n// const Chat = () => {\n//     const { username } = useParams();\n//     const [message, setMessage] = useState('');\n//     const [messages, setMessages] = useState([]);\n\n//     useEffect(() => {\n//         socket.on('message', handleMessage);\n\n//         return () => {\n//             socket.off('message', handleMessage);\n//         };\n//     }, []);\n\n//     const handleMessage = (data) => {\n//         setMessages((prevMessages) => [...prevMessages, data]);\n//     };\n\n//     const sendMessage = () => {\n//         if (message) {\n//             socket.emit('message', { recipient: username, message });\n//             setMessages((prevMessages) => [\n//                 ...prevMessages,\n//                 { sender: 'You', message: message },\n//             ]);\n//             setMessage('');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Chat with {username}</h2>\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Enter your message\"\n//                     value={message}\n//                     onChange={(e) => setMessage(e.target.value)}\n//                 />\n//                 <button onClick={sendMessage}>Send</button>\n//             </div>\n//             <h3>Chat Messages:</h3>\n//             <ul>\n//                 {messages.map((msg, index) => (\n//                     <li key={index}>\n//                         <strong>{msg.sender}:</strong> {msg.message}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default Chat;","map":{"version":3,"names":[],"sources":["/Users/meghana/Desktop/chatapp 2/frontend/src/Components/Chat.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import io from 'socket.io-client';\r\n\r\n// const socket = io('http://localhost:4000', {\r\n//     transports: ['websocket'],\r\n// });\r\n\r\n// const Chat = () => {\r\n//     const { username } = useParams();\r\n//     const [message, setMessage] = useState('');\r\n//     const [messages, setMessages] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         socket.on('message', handleMessage);\r\n\r\n//         return () => {\r\n//             socket.off('message', handleMessage);\r\n//         };\r\n//     }, []);\r\n\r\n//     const handleMessage = (data) => {\r\n//         setMessages((prevMessages) => [...prevMessages, data]);\r\n//     };\r\n\r\n//     const sendMessage = () => {\r\n//         if (message) {\r\n//             socket.emit('message', { recipient: username, message });\r\n//             setMessages((prevMessages) => [\r\n//                 ...prevMessages,\r\n//                 { sender: 'You', message: message },\r\n//             ]);\r\n//             setMessage('');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Chat with {username}</h2>\r\n//             <div>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Enter your message\"\r\n//                     value={message}\r\n//                     onChange={(e) => setMessage(e.target.value)}\r\n//                 />\r\n//                 <button onClick={sendMessage}>Send</button>\r\n//             </div>\r\n//             <h3>Chat Messages:</h3>\r\n//             <ul>\r\n//                 {messages.map((msg, index) => (\r\n//                     <li key={index}>\r\n//                         <strong>{msg.sender}:</strong> {msg.message}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Chat;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}