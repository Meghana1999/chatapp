{"ast":null,"code":"// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\n// App.js\n// import React, { useState, useEffect } from 'react';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:4000', {\n//   transports: ['websocket'], // Force WebSocket transport only\n// });\n\n// function App() {\n//   const [username, setUsername] = useState('');\n//   const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n//   const [activeUsers, setActiveUsers] = useState([]);\n//   const [recipient, setRecipient] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n\n//   useEffect(() => {\n//     const handleActiveUsers = (users) => {\n//       setActiveUsers(users.filter((user) => user !== username));\n//     };\n\n//     const handleMessage = (data) => {\n//       setMessages((prevMessages) => [...prevMessages, data]);\n//     };\n\n//     socket.on('activeUsers', handleActiveUsers);\n//     socket.on('message', handleMessage);\n\n//     return () => {\n//       socket.off('activeUsers', handleActiveUsers);\n//       socket.off('message', handleMessage);\n//     };\n//   }, [username]);\n\n//   const handleUsernameSubmit = () => {\n//     if (username.trim() !== '') {\n//       socket.emit('join', username);\n//       setUsernameSubmitted(true);\n//     }\n//   };\n\n//   const sendMessage = () => {\n//     if (recipient && message) {\n//       socket.emit('message', { recipient, message });\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { sender: 'You', message: message },\n//       ]);\n//       setMessage('');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!usernameSubmitted ? (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//           <button onClick={handleUsernameSubmit}>Set Username</button>\n//         </div>\n//       ) : (\n//         <div>\n//           <h2>Welcome, {username}!</h2>\n//           <h3>Active Users:</h3>\n//           <ul>\n//             {activeUsers.map((user) => (\n//               <li key={user}>{user}</li>\n//             ))}\n//           </ul>\n//           <h3>Select Recipient:</h3>\n//           <select\n//             value={recipient}\n//             onChange={(e) => setRecipient(e.target.value)}\n//           >\n//             <option value=\"\">Select User</option>\n//             {activeUsers.map((user) => (\n//               <option key={user} value={user}>\n//                 {user}\n//               </option>\n//             ))}\n//           </select>\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your message\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//             />\n//             <button onClick={sendMessage}>Send</button>\n//           </div>\n//           <h3>Chat Messages:</h3>\n//           <ul>\n//             {messages.map((msg, index) => (\n//               <li key={index}>\n//                 <strong>{msg.sender}:</strong> {msg.message}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/vpola/Downloads/ProJHKMag/client/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\n// App.js\n// import React, { useState, useEffect } from 'react';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:4000', {\n//   transports: ['websocket'], // Force WebSocket transport only\n// });\n\n// function App() {\n//   const [username, setUsername] = useState('');\n//   const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n//   const [activeUsers, setActiveUsers] = useState([]);\n//   const [recipient, setRecipient] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n\n//   useEffect(() => {\n//     const handleActiveUsers = (users) => {\n//       setActiveUsers(users.filter((user) => user !== username));\n//     };\n\n//     const handleMessage = (data) => {\n//       setMessages((prevMessages) => [...prevMessages, data]);\n//     };\n\n//     socket.on('activeUsers', handleActiveUsers);\n//     socket.on('message', handleMessage);\n\n//     return () => {\n//       socket.off('activeUsers', handleActiveUsers);\n//       socket.off('message', handleMessage);\n//     };\n//   }, [username]);\n\n//   const handleUsernameSubmit = () => {\n//     if (username.trim() !== '') {\n//       socket.emit('join', username);\n//       setUsernameSubmitted(true);\n//     }\n//   };\n\n//   const sendMessage = () => {\n//     if (recipient && message) {\n//       socket.emit('message', { recipient, message });\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { sender: 'You', message: message },\n//       ]);\n//       setMessage('');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {!usernameSubmitted ? (\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//           <button onClick={handleUsernameSubmit}>Set Username</button>\n//         </div>\n//       ) : (\n//         <div>\n//           <h2>Welcome, {username}!</h2>\n//           <h3>Active Users:</h3>\n//           <ul>\n//             {activeUsers.map((user) => (\n//               <li key={user}>{user}</li>\n//             ))}\n//           </ul>\n//           <h3>Select Recipient:</h3>\n//           <select\n//             value={recipient}\n//             onChange={(e) => setRecipient(e.target.value)}\n//           >\n//             <option value=\"\">Select User</option>\n//             {activeUsers.map((user) => (\n//               <option key={user} value={user}>\n//                 {user}\n//               </option>\n//             ))}\n//           </select>\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your message\"\n//               value={message}\n//               onChange={(e) => setMessage(e.target.value)}\n//             />\n//             <button onClick={sendMessage}>Send</button>\n//           </div>\n//           <h3>Chat Messages:</h3>\n//           <ul>\n//             {messages.map((msg, index) => (\n//               <li key={index}>\n//                 <strong>{msg.sender}:</strong> {msg.message}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}