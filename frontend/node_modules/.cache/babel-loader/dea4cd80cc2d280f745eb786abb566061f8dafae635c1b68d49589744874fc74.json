{"ast":null,"code":"var _jsxFileName = \"/Users/meghana/Desktop/chatapp 2/frontend/src/Components/FeedBack.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feedback = () => {\n  _s();\n  // State hooks for managing testimonials and current index\n  const [feedback, setFeedback] = useState('');\n  const [allFeedbacks, setAllFeedbacks] = useState([]);\n  useEffect(() => {\n    fetchFeedbacks();\n  }, []);\n  const fetchFeedbacks = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/feedback');\n      if (response.ok) {\n        const data = await response.json();\n        setAllFeedbacks(data);\n      } else {\n        console.error('Failed to fetch feedbacks');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleFeedbackChange = e => {\n    setFeedback(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/feedback', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          feedback\n        })\n      });\n      if (response.ok) {\n        alert('Thank you for your feedback!');\n        setFeedback('');\n        fetchFeedbacks();\n      } else {\n        console.error('Failed to send feedback');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Feedback Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We value your feedback. Please let us know your thoughts below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"feedback-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"feedback\",\n        children: \"Your Feedback:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"feedback\",\n        value: feedback,\n        onChange: handleFeedbackChange,\n        rows: 4,\n        cols: 50,\n        placeholder: \"Enter your feedback here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Feedbacks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"feedback-list\",\n      children: allFeedbacks.map((fb, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"feedback-item\",\n        children: fb\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Feedback, \"jivEJlVpr+M2gxD8aNOwexY+Z2o=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Feedback","_s","feedback","setFeedback","allFeedbacks","setAllFeedbacks","fetchFeedbacks","response","fetch","ok","data","json","console","error","handleFeedbackChange","e","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","rows","cols","placeholder","type","map","fb","index","_c","$RefreshReg$"],"sources":["/Users/meghana/Desktop/chatapp 2/frontend/src/Components/FeedBack.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Feedback = () => {\r\n    // State hooks for managing testimonials and current index\r\n    const [feedback, setFeedback] = useState('');\r\n    const [allFeedbacks, setAllFeedbacks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchFeedbacks();\r\n    }, []);\r\n\r\n    const fetchFeedbacks = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:4000/feedback');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setAllFeedbacks(data);\r\n            } else {\r\n                console.error('Failed to fetch feedbacks');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleFeedbackChange = (e) => {\r\n        setFeedback(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:4000/feedback', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ feedback })\r\n            });\r\n            if (response.ok) {\r\n                alert('Thank you for your feedback!');\r\n                setFeedback('');\r\n                fetchFeedbacks();\r\n            } else {\r\n                console.error('Failed to send feedback');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"feedback-container\">\r\n            <h2>Feedback Page</h2>\r\n            <p>We value your feedback. Please let us know your thoughts below.</p>\r\n            <form onSubmit={handleSubmit} className=\"feedback-form\">\r\n                <label htmlFor=\"feedback\">Your Feedback:</label>\r\n                <textarea \r\n                    id=\"feedback\"\r\n                    value={feedback}\r\n                    onChange={handleFeedbackChange}\r\n                    rows={4}\r\n                    cols={50}\r\n                    placeholder=\"Enter your feedback here...\"\r\n                />\r\n                <button type=\"submit\" className=\"submit-button\">Submit Feedback</button>\r\n            </form>\r\n            <h3>All Feedbacks:</h3>\r\n            <ul className=\"feedback-list\">\r\n                {allFeedbacks.map((fb, index) => (\r\n                    <li key={index} className=\"feedback-item\">\r\n                        {fb}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feedback;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}