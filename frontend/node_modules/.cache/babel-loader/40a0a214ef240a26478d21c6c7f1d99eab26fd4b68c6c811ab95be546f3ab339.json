{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:4000', {\n//   transports: ['websocket'],\n// });\n\n// const Chat = () => {\n//   const [username, setUsername] = useState('');\n//   const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n//   const [activeUsers, setActiveUsers] = useState([]);\n//   const [selectedUser, setSelectedUser] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState({});\n\n//   useEffect(() => {\n//     socket.on('activeUsers', (users) => {\n//       setActiveUsers(users.filter((user) => user !== username));\n//     });\n//     socket.on('message', (data) => {\n//       setMessages((prevMessages) => {\n//         return {\n//           ...prevMessages,\n//           [data.sender]: [...(prevMessages[data.sender] || []), data.message],\n//         };\n//       });\n//     });\n\n//     return () => {\n//       socket.off('activeUsers');\n//       socket.off('message');\n//     };\n//   }, [username]);\n\n//   const handleUsernameSubmit = () => {\n//     if (username.trim() !== '') {\n//       socket.emit('join', username);\n//       setUsernameSubmitted(true);\n//     }\n//   };\n\n//   const sendMessage = () => {\n//     if (selectedUser && message) {\n//       socket.emit('message', { recipient: selectedUser, message });\n//       setMessage('');\n//       setMessages((prevMessages) => {\n//         return {\n//           ...prevMessages,\n//           [selectedUser]: [...(prevMessages[selectedUser] || []), message],\n//         };\n//       });\n//     }\n//   };\n\n//   const selectUser = (user) => {\n//     setSelectedUser(user);\n//   };\n\n//   if (!usernameSubmitted) {\n//     return (\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter your username\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <button onClick={handleUsernameSubmit}>Set Username</button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <h2>Welcome, {username}!</h2>\n//       <h3>Active Users:</h3>\n//       <ul>\n//         {activeUsers.map((user) => (\n//           <li key={user} onClick={() => selectUser(user)} style={{ cursor: 'pointer' }}>\n//             {user}\n//           </li>\n//         ))}\n//       </ul>\n//       {selectedUser && (\n//         <div>\n//           <h3>Chat with {selectedUser}</h3>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your message\"\n//             value={message}\n//             onChange={(e) => setMessage(e.target.value)}\n//           />\n//           <button onClick={sendMessage}>Send</button>\n//           <ul>\n//             {messages[selectedUser] &&\n//               messages[selectedUser].map((msg, index) => (\n//                 <li key={index}>\n//                   <strong>{selectedUser}:</strong> {msg}\n//                 </li>\n//               ))}\n//           </ul>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Chat;","map":{"version":3,"names":[],"sources":["/Users/meghana/Desktop/chatapp 2/frontend/src/Components/Chat.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import io from 'socket.io-client';\r\n\r\n// const socket = io('http://localhost:4000', {\r\n//   transports: ['websocket'],\r\n// });\r\n\r\n// const Chat = () => {\r\n//   const [username, setUsername] = useState('');\r\n//   const [usernameSubmitted, setUsernameSubmitted] = useState(false);\r\n//   const [activeUsers, setActiveUsers] = useState([]);\r\n//   const [selectedUser, setSelectedUser] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [messages, setMessages] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     socket.on('activeUsers', (users) => {\r\n//       setActiveUsers(users.filter((user) => user !== username));\r\n//     });\r\n//     socket.on('message', (data) => {\r\n//       setMessages((prevMessages) => {\r\n//         return {\r\n//           ...prevMessages,\r\n//           [data.sender]: [...(prevMessages[data.sender] || []), data.message],\r\n//         };\r\n//       });\r\n//     });\r\n\r\n//     return () => {\r\n//       socket.off('activeUsers');\r\n//       socket.off('message');\r\n//     };\r\n//   }, [username]);\r\n\r\n//   const handleUsernameSubmit = () => {\r\n//     if (username.trim() !== '') {\r\n//       socket.emit('join', username);\r\n//       setUsernameSubmitted(true);\r\n//     }\r\n//   };\r\n\r\n//   const sendMessage = () => {\r\n//     if (selectedUser && message) {\r\n//       socket.emit('message', { recipient: selectedUser, message });\r\n//       setMessage('');\r\n//       setMessages((prevMessages) => {\r\n//         return {\r\n//           ...prevMessages,\r\n//           [selectedUser]: [...(prevMessages[selectedUser] || []), message],\r\n//         };\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const selectUser = (user) => {\r\n//     setSelectedUser(user);\r\n//   };\r\n\r\n//   if (!usernameSubmitted) {\r\n//     return (\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter your username\"\r\n//           value={username}\r\n//           onChange={(e) => setUsername(e.target.value)}\r\n//         />\r\n//         <button onClick={handleUsernameSubmit}>Set Username</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Welcome, {username}!</h2>\r\n//       <h3>Active Users:</h3>\r\n//       <ul>\r\n//         {activeUsers.map((user) => (\r\n//           <li key={user} onClick={() => selectUser(user)} style={{ cursor: 'pointer' }}>\r\n//             {user}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       {selectedUser && (\r\n//         <div>\r\n//           <h3>Chat with {selectedUser}</h3>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter your message\"\r\n//             value={message}\r\n//             onChange={(e) => setMessage(e.target.value)}\r\n//           />\r\n//           <button onClick={sendMessage}>Send</button>\r\n//           <ul>\r\n//             {messages[selectedUser] &&\r\n//               messages[selectedUser].map((msg, index) => (\r\n//                 <li key={index}>\r\n//                   <strong>{selectedUser}:</strong> {msg}\r\n//                 </li>\r\n//               ))}\r\n//           </ul>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}